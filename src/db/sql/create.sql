CREATE TABLE users(
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    uid VARCHAR(30) UNIQUE NOT NULL,
    nick_name VARCHAR(8) NOT NULL,
    pwd VARCHAR(255) NOT NULL 
);

CREATE TABLE pets(
     id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
     name VARCHAR(10) UNIQUE NOT NULL
);

CREATE TABLE foods(
     id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
     name VARCHAR(10) UNIQUE NOT NULL,
     satisfy_hunger_lv TINYINT UNSIGNED NOT NULL
);

CREATE TABLE user_pet_catalog(
     id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
     user_id INT UNSIGNED NOT NULL UNIQUE,
     pet_id INT UNSIGNED NOT NULL,
     max_pet_lv_reached TINYINT DEFAULT 1,
     FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE,
     FOREIGN KEY (pet_id) REFERENCES pets (id)
);

CREATE TABLE user_current_pet(
     id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
     user_id INT UNSIGNED NOT NULL UNIQUE, 
     pet_id INT UNSIGNED NOT NULL,
     phase TINYINT UNSIGNED NOT NULL DEFAULT 1,
     hungry TINYINT UNSIGNED NOT NULL DEFAULT 0, 
     bored  TINYINT UNSIGNED NOT NULL DEFAULT 0,
     alive TINYINT NOT NULL DEFAULT 1,
     next_lv_time TIMESTAMP DEFAULT (NOW() + INTERVAL 10 MINUTE),
     stool_count TINYINT UNSIGNED NOT NULL DEFAULT 0
     FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE,
     FOREIGN KEY (pet_id) REFERENCES pets (id)
);

CREATE TABLE user_foods(
     id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
     user_id INT UNSIGNED NOT NULL UNIQUE, 
     food_id INT UNSIGNED NOT NULL,
     food_count INT NOT NULL DEFAULT 5,
     FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE,
     FOREIGN KEY (food_id) REFERENCES foods (id) 
);

CREATE TABLE last_requests(
     id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
     user_id INT UNSIGNED NOT NULL UNIQUE,
     time TIMESTAMP DEFAULT now(),
     FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);

SELECT @@GLOBAL.time_zone;

UPDATE user_current_pet SET next_lv_time = NOW(), phase = 1 WHERE user_id = 4

ALTER TABLE user_current_pet ADD alive TINYINT NOT NULL DEFAULT 1;

SELECT count(*) FROM last_requests;

UPDATE last_requests SET user_id = user_id + 1;